name: Build yakyak binaries

on:
  push:
    branches:
      - "master"

jobs:
  build-yakyak:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '12'
    - run: npm install -g coffee-script
    - run: npm ci
    - run: |
        # environment variables
        export NPM_DEBUG_LEVEL=silent
        export YAKYAK_VERSION=`node -e "console.log(require('./package.json').version);"`
        # debug information for the electron packager
        export DEBUG=electron-packager
    - run: |
        # install wine 32-bit architecture
        sudo dpkg --add-architecture i386
        sudo apt-get -qq update
        sudo rm /var/lib/dpkg/lock
        sudo apt-get install -y -qq wine-stable zip xvfb fakeroot
        wine wineboot --init # WINEARCH=win32
    - run: npm run -loglevel ${NPM_DEBUG_LEVEL} deploy:linux-x64
    - run: npm run -loglevel ${NPM_DEBUG_LEVEL} deploy:linux-arm64
    - run: npm run -loglevel ${NPM_DEBUG_LEVEL} deploy:linux-ia32
    - run: npm run -loglevel ${NPM_DEBUG_LEVEL} deploy:darwin-x64
    - run: npm run -loglevel ${NPM_DEBUG_LEVEL} deploy:darwin-arm64
    - run: xvfb-run npm run -loglevel ${NPM_DEBUG_LEVEL} deploy:win32
    - run: |
        # dependencies for RPM, DEB and Pacman binaries
        # install fpm
        sudo gem install --no-document fpm
        # needed to deploy on rpm / pacman
        sudo apt-get install -y -qq rpm libarchive-tools
    # build rpm, deb and pacman
    - run: npm run -loglevel ${NPM_DEBUG_LEVEL} gulp deploy:linux-x64:rpm:nodep
    - run: npm run -loglevel ${NPM_DEBUG_LEVEL} gulp deploy:linux-x64:deb:nodep
    - run: npm run -loglevel ${NPM_DEBUG_LEVEL} gulp deploy:linux-x64:pacman:nodep
    - run: npm run -loglevel ${NPM_DEBUG_LEVEL} gulp deploy:linux-ia32:rpm:nodep
    - run: npm run -loglevel ${NPM_DEBUG_LEVEL} gulp deploy:linux-ia32:deb:nodep
    - run: npm run -loglevel ${NPM_DEBUG_LEVEL} gulp deploy:linux-ia32:pacman:nodep
    #
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: rolling-test #${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: true
        files: |
            dist/*.tar
            dist/*.deb
            dist/*.tag.gz
            dist/*.rpm
            dist/*.zip
