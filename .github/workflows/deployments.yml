name: Build yakyak binaries

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build-yakyak:
    env:
      NPM_DEBUG_LEVEL: silent
      DEBUG: electron-packager

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: olegtarasov/get-tag@v2
      id: tagName
    - uses: actions/setup-node@v1
      with:
        node-version: '12'
    - name: Install coffeescript to build *.coffee sources
      run: npm install -g coffee-script
    - name: Install packages
      run: npm ci
    - name: Setup environment variables
      id: env-variables
      run: echo "::set-output name=version::$(node -e "console.log(require('./package.json').version);")"
    - name: install wine 32-bit architecture
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get -qq update
        sudo rm /var/lib/dpkg/lock
        sudo apt-get install -y -qq wine-stable zip xvfb fakeroot
        wine wineboot --init # WINEARCH=win32
    - name: Linux build (64-bits)
      run: npm run -loglevel ${NPM_DEBUG_LEVEL} deploy:linux-x64
    - name: Linux build (arm 64-bits)
      run: npm run -loglevel ${NPM_DEBUG_LEVEL} deploy:linux-arm64
    - name: Linux build (32-bits)
      run: npm run -loglevel ${NPM_DEBUG_LEVEL} deploy:linux-ia32
    - name: Mac OSX build (intel 64-bits)
      run: npm run -loglevel ${NPM_DEBUG_LEVEL} deploy:darwin-x64
    - name: Mac OSX build (arm 64-bits)
      run: npm run -loglevel ${NPM_DEBUG_LEVEL} deploy:darwin-arm64
    - name: Windows builds (32 and 64 bits)
      run: xvfb-run npm run -loglevel ${NPM_DEBUG_LEVEL} deploy:win32
    - name: Install rpm, deb and pacman dependencies
      run: sudo gem install --no-document fpm && sudo apt-get install -y -qq rpm libarchive-tools
    - name: RPM build
      run: npm run -loglevel ${NPM_DEBUG_LEVEL} gulp deploy:linux-x64:rpm:nodep
    - name: RPM build (32-bits)
      run: npm run -loglevel ${NPM_DEBUG_LEVEL} gulp deploy:linux-ia32:rpm:nodep
    - name: DEB build (64-bits)
      run: npm run -loglevel ${NPM_DEBUG_LEVEL} gulp deploy:linux-x64:deb:nodep
    - name: DEB build (32-bits)
      run: npm run -loglevel ${NPM_DEBUG_LEVEL} gulp deploy:linux-ia32:deb:nodep
    - name: Pacman build (64-bits)
      run: npm run -loglevel ${NPM_DEBUG_LEVEL} gulp deploy:linux-x64:pacman:nodep
    - name: Pacman build (32-bits)
      run: npm run -loglevel ${NPM_DEBUG_LEVEL} gulp deploy:linux-ia32:pacman:nodep
    #
    - name: Release and Upload assets
      uses: "marvinpinto/action-automatic-releases@10bdce6"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: true
        automatic_release_tag: ${{ steps.tagName.outputs.tag }}
        files: |
          dist/yakyak-${{ steps.env-variables.outputs.version }}-linux-amd64.deb
          dist/yakyak-${{ steps.env-variables.outputs.version }}-linux-arm64.tar.gz
          dist/yakyak-${{ steps.env-variables.outputs.version }}-linux-i386.deb
          dist/yakyak-${{ steps.env-variables.outputs.version }}-linux-ia32-pacman.tar.gz
          dist/yakyak-${{ steps.env-variables.outputs.version }}-linux-ia32.rpm
          dist/yakyak-${{ steps.env-variables.outputs.version }}-linux-ia32.tar.gz
          dist/yakyak-${{ steps.env-variables.outputs.version }}-linux-x64-pacman.tar.gz
          dist/yakyak-${{ steps.env-variables.outputs.version }}-linux-x64.rpm
          dist/yakyak-${{ steps.env-variables.outputs.version }}-linux-x64.tar.gz
          dist/yakyak-${{ steps.env-variables.outputs.version }}-osx-arm64.zip
          dist/yakyak-${{ steps.env-variables.outputs.version }}-osx-x64.zip
          dist/yakyak-${{ steps.env-variables.outputs.version }}-win32-arm64.zip
          dist/yakyak-${{ steps.env-variables.outputs.version }}-win32-ia32.zip
          dist/yakyak-${{ steps.env-variables.outputs.version }}-win32-x64.zip
      #
      #    - "dist/com.github.yakyak.YakYak_master_x64.flatpak"
      # #    - "dist/com.github.yakyak.YakYak_master_ia32.flatpak"
